/*
 * Copyright 2020 - Transmute Industries Inc.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *     http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import * as bip39 from 'bip39';
import { seedToId } from '@transmute/universal-wallet';
import * as sidetreeCrypto from '@sidetree/crypto';
import { Mnemonic } from '../types';
import { UNIVERSAL_WALLET_CONTEXT_URL, placeHolderImage } from '../constants';

export const toMnemonic = async (mnemonic?: string): Promise<Mnemonic> => {
  if (!mnemonic) {
    mnemonic = await sidetreeCrypto.generateMnemonic();
  }
  const seed = await bip39.mnemonicToSeed(mnemonic);
  const id = await seedToId(seed);
  return {
    '@context': [UNIVERSAL_WALLET_CONTEXT_URL],
    id,
    type: 'Mnemonic',
    name: 'Sidetree Mnemonic',
    image: placeHolderImage,
    description: 'Generated by @sidetree/wallet.',
    tags: [],
    value: mnemonic,
  };
};
